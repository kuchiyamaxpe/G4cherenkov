
#ifndef B4TrackerSD_h
#define B4TrackerSD_h 1

#include "G4VSensitiveDetector.hh"

#include "B4TrackerHit.hh"

#include <vector>
class G4Step;
class G4HCofThisEvent;

class B4TrackerSD : public G4VSensitiveDetector
{
public:
  B4TrackerSD(const G4String &name,
              const G4String &hitsCollectionName);
  virtual ~B4TrackerSD();

  // methods from base class
  virtual void Initialize(G4HCofThisEvent *hitCollection);
  virtual G4bool ProcessHits(G4Step *step, G4TouchableHistory *history);
  virtual void EndOfEvent(G4HCofThisEvent *hitCollection);

private:
  B4TrackerHitsCollection *fHitsCollection;
};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif